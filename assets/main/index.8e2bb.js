System.register("chunks:///_virtual/Camera.ts",["./rollupPluginModLoBabelHelpers.js","cc","./PlayerForceReciever.ts","./Config.ts","./Vec3.math.ts"],(function(e){var t,o,i,r,n,s,a,c,l,f,h,u,p,d,m;return{setters:[function(e){t=e.applyDecoratedDescriptor,o=e.inheritsLoose,i=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){n=e.cclegacy,s=e._decorator,a=e.Node,c=e.Vec3,l=e.Component},function(e){f=e.PlayerForceReviever,h=e.ForceEvents},function(e){u=e.TRAIN_HEIGHT},function(e){p=e.subtractVec3,d=e.addVec3,m=e.lerpVec3}],execute:function(){var v,w,y,Y,g,N,b;n._RF.push({},"5f68aj5XhpBvI75br+LisEw","Camera",void 0);var R=s.ccclass,C=s.property;e("Camera",(v=R("Camera"),w=C(a),y=C(f),v((N=t((g=function(e){function t(){for(var t,o=arguments.length,n=new Array(o),s=0;s<o;s++)n[s]=arguments[s];return t=e.call.apply(e,[this].concat(n))||this,i(t,"followNode",N,r(t)),i(t,"forceReciever",b,r(t)),t.offset=null,t.startY=0,t.cameraY=0,t.cameraChangeLimit=.2,t.followLerpSpeed=10,t}o(t,e);var n=t.prototype;return n.start=function(){this.cameraY=this.startY=this.node.position.y,this.offset=p(this.node.position,this.followNode.position),this.forceReciever.EventsTarget.on(h.OnGrounded,this.handleOnGrounded,this)},n.update=function(e){this.followNew(e)},n.follow=function(){var e=this.followNode.position,t=d(e,this.offset);t.x=0,t.y=this.startY,this.node.setPosition(t)},n.followNew=function(e){this.forceReciever.IsFalling&&this.followNode.position.y<u-.1&&this.cameraY>this.startY&&(this.cameraY=this.startY);var t=this.node.position,o=new c(this.followNode.position.x,this.cameraY,this.followNode.position.z+this.offset.z),i=m(t,o,this.followLerpSpeed*e);this.node.setPosition(i)},n.handleOnGrounded=function(e){Math.abs(e-this.startY)<this.cameraChangeLimit||(this.cameraY=e+this.startY)},t}(l)).prototype,"followNode",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),b=t(g.prototype,"forceReciever",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Y=g))||Y));n._RF.pop()}}}));

System.register("chunks:///_virtual/Chunk.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(n){var o,t,e,r;return{setters:[function(n){o=n.inheritsLoose},function(n){t=n.cclegacy,e=n._decorator,r=n.Component}],execute:function(){var c;t._RF.push({},"07e8dXk8UVFsLsgPsNFAZiI","Chunk",void 0);var s=e.ccclass;e.property,n("Chunk",s("Chunk")(c=function(n){function t(){for(var o,t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return(o=n.call.apply(n,[this].concat(e))||this).poolIndex=-1,o.coins=[],o}o(t,n);var e=t.prototype;return e.setCoins=function(n){},e.clearCoins=function(){},t}(r))||c);t._RF.pop()}}}));

System.register("chunks:///_virtual/ChunkSpawnManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Config.ts","./Chunk.ts","./NodePool.ts"],(function(n){var o,t,e,i,s,r,a,u,c,h,l,p,d,f;return{setters:[function(n){o=n.applyDecoratedDescriptor,t=n.inheritsLoose,e=n.initializerDefineProperty,i=n.assertThisInitialized},function(n){s=n.cclegacy,r=n._decorator,a=n.Node,u=n.Prefab,c=n.Vec3,h=n.Component},function(n){l=n.CHUNK_SPAWN_DISTANCE,p=n.CHUNK_SIZE_Z},function(n){d=n.Chunk},function(n){f=n.NodePool}],execute:function(){var k,P,w,C,y,g,v,b,m;s._RF.push({},"d5f40y7RnFNcrBzZVJwk/ji","ChunkSpawnManager",void 0);var N=r.ccclass,I=r.property;n("ChunkSpawnManager",(k=N("ChunkSpawnManager"),P=I(a),w=I({type:[u]}),C=I(u),k((v=o((g=function(n){function o(){for(var o,t=arguments.length,s=new Array(t),r=0;r<t;r++)s[r]=arguments[r];return o=n.call.apply(n,[this].concat(s))||this,e(o,"playerNode",v,i(o)),e(o,"chunks",b,i(o)),e(o,"coinPrefab",m,i(o)),o.spawnPos=new c(0,0,0),o.chunkPools=[],o.chunkInstances=[],o}t(o,n);var s=o.prototype;return s.start=function(){this.initChunkPools()},s.update=function(n){c.distance(this.playerNode.worldPosition,this.spawnPos)<l&&this.spawnRandomChunkFromPool();for(var o=0;o<this.chunkInstances.length;o++){var t=this.chunkInstances[o];if(this.playerNode.worldPosition.z<t.node.worldPosition.z-p-10)return this.despawnChunk(t),void this.chunkInstances.splice(o,1)}},s.initChunkPools=function(){this.chunkPools=[];for(var n=0;n<this.chunks.length;n++){var o=new f;o.init(this.chunks[n],5),this.chunkPools.push(o)}},s.spawnRandomChunkFromPool=function(){var n=Math.floor(Math.random()*this.chunkPools.length),o=this.chunkPools[n].get(),t=o.getComponent(d);null==t&&(t=o.addComponent(d)),t.poolIndex=n,this.chunkInstances.push(t),this.node.addChild(o),o.setWorldPosition(this.spawnPos),o.active=!0,this.spawnPos.z-=p},s.despawnChunk=function(n){-1!==n.poolIndex?this.chunkPools[n.poolIndex].put(n.node):n.node.destroy()},o}(h)).prototype,"playerNode",[P],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),b=o(g.prototype,"chunks",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),m=o(g.prototype,"coinPrefab",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=g))||y));s._RF.pop()}}}));

System.register("chunks:///_virtual/Coin.ts",["./rollupPluginModLoBabelHelpers.js","cc","./StaticManager.ts"],(function(t){var n,e,o,r,i,s,a,c;return{setters:[function(t){n=t.inheritsLoose},function(t){e=t.cclegacy,o=t._decorator,r=t.Vec3,i=t.tween,s=t.Collider,a=t.Component},function(t){c=t.StaticInstance}],execute:function(){var u;e._RF.push({},"4fad4OBBMpDjIHUIf4zyxA7","Coin",void 0);var l=o.ccclass;o.property,t("Coin",l("Coin")(u=function(t){function e(){for(var n,e=arguments.length,o=new Array(e),r=0;r<e;r++)o[r]=arguments[r];return(n=t.call.apply(t,[this].concat(o))||this).tween=null,n}n(e,t);var o=e.prototype;return o.start=function(){this.startRotation(),this.setupCollider()},o.onDestroy=function(){this.tween.stop()},o.startRotation=function(){var t=this,n=new r(90,0,0);this.node.setRotationFromEuler(n),this.tween=i(n).by(1,new r(0,180,0),{onUpdate:function(){t.node.setRotationFromEuler(n)}}).repeatForever().start()},o.setupCollider=function(){this.node.getComponent(s).on("onTriggerEnter",this.onTriggerEnter,this)},o.onTriggerEnter=function(t){},o.collect=function(){this.tween.stop(),this.node.destroy(),c.gameManager.addScore()},e}(a))||u);e._RF.pop()}}}));

System.register("chunks:///_virtual/Config.ts",["cc"],(function(_){var E;return{setters:[function(_){E=_.cclegacy}],execute:function(){E._RF.push({},"b7b7fh9smVK8q9mgPuTke1g","Config",void 0);var I=_("TRAIN_HEIGHT",4),T=(_("PLATFORM_HEIGHT",1.5),_("HEAD_BUMPER_HEIGHT",1.5),_("TUNNEL_HEIGHT",3*I),_("CHUNK_SIZE_Z",50),_("CHUNK_SPAWN_DISTANCE",90),_("X_BOUND",1.5)),H=_("LEFT_SIDE_X",-T),N=_("MID_SIDE_X",0),e=_("RIGHT_SIDE_X",T);_("COINS_X_SPAWN_OPTIONS",[H,N,e]),_("TRAIN_MOVE_SPEED",5);E._RF.pop()}}}));

System.register("chunks:///_virtual/GameManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./StaticManager.ts","./Utils.ts"],(function(e){var t,n,r,a,i,s,o,c,u,l,f,h,m,d,p,g;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,a=e.assertThisInitialized,i=e.asyncToGenerator,s=e.regeneratorRuntime},function(e){o=e.cclegacy,c=e._decorator,u=e.Button,l=e.Label,f=e.Node,h=e.EventTarget,m=e.director,d=e.Component},function(e){p=e.StaticInstance},function(e){g=e.delay}],execute:function(){var v,G,b,y,O,L,E,S,w,I,T,z,C;o._RF.push({},"67db1+KcvtDCbzUefkGU12M","GameManager",void 0);var x=c.ccclass,B=c.property,M=e("GameEvents",function(e){return e.OnGameStarted="OnGameStarted",e.OnBump="OnBump",e.OnLifeless="OnLifeless",e.OnLifeRegenerated="OnLifeRegenerated",e.OnCrashed="OnCrashed",e.OnGameEnd="OnGameEnd",e}({}));e("GameManager",(v=x("GameManager"),G=B(u),b=B(l),y=B(l),O=B(f),L=B(f),v((w=t((S=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),s=0;s<n;s++)i[s]=arguments[s];return(t=e.call.apply(e,[this].concat(i))||this).EventsTarget=new h,r(t,"restartButton",w,a(t)),r(t,"coinsLabel",I,a(t)),r(t,"scoreLabel",T,a(t)),r(t,"gameOver",z,a(t)),r(t,"player",C,a(t)),t.IsGameStarted=!1,t.IsGameEnded=!1,t.lifes=2,t.score=0,t.coins=0,t}n(t,e);var o=t.prototype;return o.onLoad=function(){p.setGameManager(this)},o.start=function(){this.startGame(),this.restartButton.node.on(u.EventType.CLICK,this.restartGame,this)},o.update=function(e){this.IsGameEnded||(this.score=-this.player.position.z,this.scoreLabel.string="Score: "+this.score.toFixed(0))},o.startGameWithDelay=function(){var e=i(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,g(1.2);case 2:this.startGame();case 3:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),o.startIntro=function(){this.startGameWithDelay()},o.startGame=function(){this.IsGameStarted=!0,this.IsGameStarted=!1,this.EventsTarget.emit(M.OnGameStarted),this.gameOver.active=!1},o.endGame=function(e){void 0===e&&(e=!1),e?this.EventsTarget.emit(M.OnLifeless):this.EventsTarget.emit(M.OnCrashed),this.IsGameEnded=!0,this.EventsTarget.emit(M.OnGameEnd),this.gameOver.active=!0},o.addScore=function(){this.coins++,this.coinsLabel.string="Coins: "+this.coins},o.changingSideCrash=function(){this.lifes--,this.lifes<=0?this.endGame():(this.EventsTarget.emit(M.OnBump),this.doLifeRegen())},o.doLifeRegen=function(){var e=i(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,g(4.2);case 2:if(!this.IsGameEnded){e.next=4;break}return e.abrupt("return");case 4:if(!(this.lifes>=2)){e.next=6;break}return e.abrupt("return");case 6:this.lifes++,this.EventsTarget.emit(M.OnLifeRegenerated);case 8:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),o.restartGame=function(){m.loadScene("Game")},o.revive=function(){},t}(d)).prototype,"restartButton",[G],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I=t(S.prototype,"coinsLabel",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),T=t(S.prototype,"scoreLabel",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),z=t(S.prototype,"gameOver",[O],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=t(S.prototype,"player",[L],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),E=S))||E));o._RF.pop()}}}));

System.register("chunks:///_virtual/InputReader.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var n,e,o,i,s,h,c,u,p;return{setters:[function(t){n=t.inheritsLoose},function(t){e=t.cclegacy,o=t._decorator,i=t.input,s=t.Input,h=t.KeyCode,c=t.EventTarget,u=t.Vec2,p=t.Component}],execute:function(){var r;e._RF.push({},"3902bd/MthKWZHCf6lEF79U","InputReader",void 0);var a=o.ccclass,f=(o.property,t("InputEvents",function(t){return t.OnGoLeft="OnGoLeft",t.OnGoRight="OnGoRight",t.OnRoll="OnRoll",t.OnJump="OnJump",t}({})));t("InputReader",a("InputReader")(r=function(t){function e(){for(var n,e=arguments.length,o=new Array(e),i=0;i<e;i++)o[i]=arguments[i];return(n=t.call.apply(t,[this].concat(o))||this).EventsTarget=new c,n.touchStartPos=new u,n.touchEndPos=new u,n}n(e,t);var o=e.prototype;return o.onLoad=function(){i.on(s.EventType.KEY_DOWN,this.onKeyDown,this),i.on(s.EventType.KEY_UP,this.onKeyUp,this),i.on(s.EventType.TOUCH_START,this.onTouchStart,this),i.on(s.EventType.TOUCH_END,this.onTouchEnd,this)},o.onDestroy=function(){i.off(s.EventType.KEY_DOWN,this.onKeyDown,this),i.off(s.EventType.KEY_UP,this.onKeyUp,this),i.off(s.EventType.TOUCH_START,this.onTouchStart,this),i.off(s.EventType.TOUCH_END,this.onTouchEnd,this)},o.onTouchStart=function(t){this.touchStartPos=t.getLocation()},o.onTouchEnd=function(t){this.touchEndPos=t.getLocation(),this.detectSwipe()},o.onKeyDown=function(t){switch(t.keyCode){case h.ARROW_LEFT:this.onSwipeLeft();break;case h.ARROW_RIGHT:this.onSwipeRight();break;case h.ARROW_UP:this.onSwipeUp();break;case h.ARROW_DOWN:this.onSwipeDown()}},o.onKeyUp=function(t){switch(t.keyCode){case h.ARROW_LEFT:case h.ARROW_RIGHT:}},o.detectSwipe=function(){var t=this.touchEndPos.subtract(this.touchStartPos);t.length()<50||(Math.abs(t.x)>Math.abs(t.y)?t.x>0?this.onSwipeRight():this.onSwipeLeft():t.y>0?this.onSwipeUp():this.onSwipeDown())},o.onSwipeUp=function(){console.log("up"),this.EventsTarget.emit(f.OnJump)},o.onSwipeDown=function(){console.log("down"),this.EventsTarget.emit(f.OnRoll)},o.onSwipeLeft=function(){console.log("left"),this.EventsTarget.emit(f.OnGoLeft)},o.onSwipeRight=function(){console.log("right"),this.EventsTarget.emit(f.OnGoRight)},e}(p))||r);e._RF.pop()}}}));

System.register("chunks:///_virtual/main",["./Camera.ts","./Chunk.ts","./ChunkSpawnManager.ts","./Coin.ts","./Config.ts","./GameManager.ts","./InputReader.ts","./MovingTrain.ts","./MovingTrainTrigger.ts","./Player.ts","./PlayerForceReciever.ts","./Road.ts","./StaticManager.ts","./TestCube.ts","./Utils.ts","./Vec2.math.ts","./Vec3.math.ts","./NodePool.ts"],(function(){return{setters:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){}}}));

System.register("chunks:///_virtual/MovingTrain.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Config.ts"],(function(n){var o,t,i,r,e,s;return{setters:[function(n){o=n.inheritsLoose},function(n){t=n.cclegacy,i=n._decorator,r=n.Vec3,e=n.Component},function(n){s=n.TRAIN_MOVE_SPEED}],execute:function(){var c;t._RF.push({},"7e64bM0DsJFYbNwhhu0rIbN","MovingTrain",void 0);var u=i.ccclass;i.property,n("MovingTrain",u("MovingTrain")(c=function(n){function t(){return n.apply(this,arguments)||this}o(t,n);var i=t.prototype;return i.start=function(){},i.update=function(n){this.moveForward(n)},i.moveForward=function(n){var o=this.node.position,t=new r(o.x,o.y,o.z+n*s);this.node.setPosition(t)},t}(e))||c);t._RF.pop()}}}));

System.register("chunks:///_virtual/MovingTrainTrigger.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var r,n,t,i,o,a,c,s,l;return{setters:[function(e){r=e.applyDecoratedDescriptor,n=e.inheritsLoose,t=e.initializerDefineProperty,i=e.assertThisInitialized},function(e){o=e.cclegacy,a=e._decorator,c=e.Node,s=e.Collider,l=e.Component}],execute:function(){var u,g,p,f,T;o._RF.push({},"f8830oPfptJhLa/gldLkGvs","MovingTrainTrigger",void 0);var h=a.ccclass,v=a.property;e("MovingTrainTrigger",(u=h("MovingTrainTrigger"),g=v({type:[c]}),u((T=r((f=function(e){function r(){for(var r,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return r=e.call.apply(e,[this].concat(o))||this,t(r,"objectsToEnable",T,i(r)),r}n(r,e);var o=r.prototype;return o.start=function(){this.setupCollider()},o.enableObjects=function(){this.objectsToEnable.forEach((function(e){e.active=!0}))},o.setupCollider=function(){this.node.getComponent(s).on("onTriggerEnter",this.onTriggerEnter,this)},o.onTriggerEnter=function(e){},r}(l)).prototype,"objectsToEnable",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),p=f))||p));o._RF.pop()}}}));

System.register("chunks:///_virtual/NodePool.ts",["cc"],(function(o){var t,i,e;return{setters:[function(o){t=o.cclegacy,i=o._decorator,e=o.instantiate}],execute:function(){var n;t._RF.push({},"b7414JfRgROz7Lj387Ikpxv","NodePool",void 0);var r=i.ccclass;o("NodePool",r("NodePool")(n=function(){function o(){this.pool=[],this.prefab=null}var t=o.prototype;return t.init=function(o,t){void 0===t&&(t=0),this.prefab=o,this.pool.length=0;for(var i=0;i<t;i++){var n=e(o);n.active=!1,this.pool.push(n)}},t.get=function(){if(!this.prefab)throw new Error("NodePool: Prefab is not initialized. Call init(prefab, count) first.");var o;return(o=this.pool.length>0?this.pool.pop():e(this.prefab)).active=!0,o},t.put=function(o){o.removeFromParent(),o.active=!1,this.pool.push(o)},t.clear=function(){this.pool.length=0},t.size=function(){return this.pool.length},o}())||n);t._RF.pop()}}}));

System.register("chunks:///_virtual/Player.ts",["./rollupPluginModLoBabelHelpers.js","cc","./PlayerForceReciever.ts","./InputReader.ts","./Utils.ts","./Coin.ts","./Config.ts","./StaticManager.ts","./MovingTrainTrigger.ts"],(function(e){var t,n,i,r,o,l,a,s,h,c,d,u,g,f,v,p,m,R,C,S,M,E,O,w,T,L;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,i=e.initializerDefineProperty,r=e.assertThisInitialized,o=e.asyncToGenerator,l=e.regeneratorRuntime},function(e){a=e.cclegacy,s=e._decorator,h=e.BoxCharacterController,c=e.SkeletalAnimation,d=e.Node,u=e.Vec3,g=e.tween,f=e.lerp,v=e.Component},function(e){p=e.PlayerForceReviever,m=e.ForceEvents},function(e){R=e.InputReader,C=e.InputEvents},function(e){S=e.delay},function(e){M=e.Coin},function(e){E=e.LEFT_SIDE_X,O=e.MID_SIDE_X,w=e.RIGHT_SIDE_X},function(e){T=e.StaticInstance},function(e){L=e.MovingTrainTrigger}],execute:function(){var H,b,y,A,D,I,G,B,N,_,F,x,P;a._RF.push({},"b373b9nkOtJp4KaEMiRi+Vu","Player",void 0);var k=s.ccclass,z=s.property,J=(e("CHA_MOVE_SPEED",5),e("CHA_DASH_SPEED",5)),j=e("CHA_JUMP_HEIGHT",3),U=function(e){return e[e.Left=0]="Left",e[e.Right=1]="Right",e[e.Mid=2]="Mid",e[e.MidLeft=3]="MidLeft",e[e.MidRight=4]="MidRight",e}(U||{}),V=function(e){return e[e.Left=0]="Left",e[e.Right=1]="Right",e[e.None=2]="None",e}(V||{});e("Player",(H=k("Player"),b=z(p),y=z(R),A=z(h),D=z(c),I=z(d),H((N=t((B=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),l=0;l<n;l++)o[l]=arguments[l];return t=e.call.apply(e,[this].concat(o))||this,i(t,"forceReviever",N,r(t)),i(t,"inputReader",_,r(t)),i(t,"characterController",F,r(t)),i(t,"skeletalAnim",x,r(t)),i(t,"debugCube",P,r(t)),t.colliderHalfHeightOnStart=void 0,t.colliderHalfHeightOnRoll=void 0,t.colliderCenterOnStart=void 0,t.colliderCenterOnRoll=void 0,t.currentSide=void 0,t.currentDirection=void 0,t.sideMoveTween=void 0,t.isRolling=!1,t.isChangingSide=!1,t.canBump=!0,t.currentClip=3,t.currentClipName="",t}n(t,e);var a=t.prototype;return a.onLoad=function(){this.canBump=!0,this.currentSide=U.Mid,this.inputReader.EventsTarget.on(C.OnGoLeft,this.handleOnGoLeftEvent,this),this.inputReader.EventsTarget.on(C.OnGoRight,this.handleOnGoRightEvent,this),this.inputReader.EventsTarget.on(C.OnJump,this.handleOnJumpEvent,this),this.inputReader.EventsTarget.on(C.OnRoll,this.handleOnRollEvent,this),this.forceReviever.EventsTarget.on(m.OnFall,this.handleOnFallEvent,this),this.forceReviever.EventsTarget.on(m.OnLanded,this.handleOnLandedEvent,this),this.forceReviever.EventsTarget.on(m.OnRunSpeedChange,this.handleOnRunSpeedChangeEvent,this),this.forceReviever.EventsTarget.on(m.OnGrounded,this.handleOnGrounded,this),this.setupCollider()},a.onDestroy=function(){},a.update=function(e){},a.lateUpdate=function(e){},a.stopSideMoveTween=function(){this.sideMoveTween&&(this.sideMoveTween.stop(),this.sideMoveTween=null)},a.startSideMoveTween=function(e,t){var n=this;this.isChangingSide=!0;var i=this.node.position,r=Math.abs(i.x-e)/J;this.currentDirection=e>i.x?V.Right:V.Left;var o=new u(0,0,0);this.sideMoveTween=g(o).to(r,new u(1,0,0),{easing:"quadInOut",onUpdate:function(){var r=n.node.position.x,l=f(i.x,e,o.x)-r;Math.abs(r-e)<.7&&n.isChangingSide&&(n.isChangingSide=!1,n.currentDirection=V.None,n.currentSide=t);var a=new u(l,0,0);n.characterController.move(a)}}).call((function(){n.isChangingSide=!1,n.currentDirection=V.None,n.currentSide=t,n.sideMoveTween=null})).start()},a.jump=function(e){void 0===e&&(e=j),this.forceReviever.IsInAir||(this.isRolling=!1,this.doJumpAnim(),this.forceReviever.jump(e))},a.handleOnFallEvent=function(){this.doFallAnim()},a.handleOnGrounded=function(){},a.handleOnLandedEvent=function(){this.isRolling||this.doRunAnim()},a.handleOnRunSpeedChangeEvent=function(){},a.handleBumping=function(){this.currentSide==U.MidLeft?this.currentDirection==V.Right?(this.stopSideMoveTween(),this.startSideMoveTween(E,U.Left)):this.currentDirection==V.Left&&(this.stopSideMoveTween(),this.startSideMoveTween(O,U.Mid)):this.currentSide==U.MidRight&&(this.currentDirection==V.Right?(this.stopSideMoveTween(),this.startSideMoveTween(O,U.Mid)):this.currentDirection==V.Left&&(this.stopSideMoveTween(),this.startSideMoveTween(w,U.Right)))},a.handleOnGoLeftEvent=function(){T.gameManager.IsGameEnded||this.currentSide!=U.Left&&(this.currentDirection=V.Left,this.stopSideMoveTween(),this.currentSide==U.Mid||this.currentSide==U.MidLeft?(this.startSideMoveTween(E,U.Left),this.currentSide=U.MidLeft):this.currentSide!=U.Right&&this.currentSide!=U.MidRight||(this.startSideMoveTween(O,U.Mid),this.currentSide=U.MidRight))},a.handleOnGoRightEvent=function(){T.gameManager.IsGameEnded||this.currentSide!=U.Right&&(this.currentDirection=V.Right,this.stopSideMoveTween(),this.currentSide==U.Mid||this.currentSide==U.MidRight?(this.startSideMoveTween(w,U.Right),this.currentSide=U.MidRight):this.currentSide!=U.Left&&this.currentSide!=U.MidLeft||(this.startSideMoveTween(O,U.Mid),this.currentSide=U.MidLeft))},a.handleOnJumpEvent=function(){T.gameManager.IsGameEnded||(console.log("handleOnJumpEvent"),this.jump(j))},a.handleOnRollEvent=function(){if(!T.gameManager.IsGameEnded)if(this.isRolling)console.log("ROLLING ALREADY");else{this.forceReviever.IsInAir&&(this.forceReviever.airRoll=!0),this.doRollAnim(),console.log("ROLL BERORE",this.characterController.node.position);var e=(this.characterController.halfHeight-this.colliderHalfHeightOnRoll)*this.node.scale.y;this.characterController.move(new u(0,-e,0)),this.characterController.halfHeight=this.colliderHalfHeightOnRoll,this.characterController.center=this.colliderCenterOnRoll,console.log("ROLL",this.characterController.node.position),this.setDebugCube(),this.doRollCooldown()}},a.doRollCooldown=function(){var e=o(l().mark((function e(){var t,n;return l().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.isRolling=!0,e.next=3,S(1);case 3:console.log("ROLL BEFORE END",this.characterController.node.position),t=this.characterController.halfHeight,n=(this.colliderHalfHeightOnStart-t)*this.node.scale.y,this.characterController.move(new u(0,n+.1,0)),this.characterController.halfHeight=this.colliderHalfHeightOnStart,this.characterController.center=this.colliderCenterOnStart,this.setDebugCube(),this.isRolling=!1,this.doRunAnim(),console.log("ROLL END",this.characterController.node.position);case 13:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),a.doBumpCooldown=function(){var e=o(l().mark((function e(){return l().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.canBump=!1,e.next=3,S(1);case 3:this.canBump=!0;case 4:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),a.setDebugCube=function(){this.debugCube.setPosition(this.characterController.center),this.debugCube.setScale(2*this.characterController.halfSideExtent,2*this.characterController.halfHeight,2*this.characterController.halfForwardExtent)},a.setupCollider=function(){this.characterController.on("onControllerColliderHit",this.onColliderHit,this),this.characterController.on("onControllerTriggerEnter",this.onControllerTriggerEnter,this),this.colliderHalfHeightOnStart=this.characterController.halfHeight,this.colliderCenterOnStart=new u(0,this.colliderHalfHeightOnStart,0),this.colliderHalfHeightOnRoll=.33*this.colliderHalfHeightOnStart,this.colliderCenterOnRoll=new u(0,this.colliderHalfHeightOnRoll,0),this.setDebugCube()},a.onCollisionEnter=function(e){},a.onColliderHit=function(e){var t=e.worldNormal;e.collider.getGroup();if(!T.gameManager.IsGameEnded)if(this.isChangingSide){if(t.y>.5)return;if(t.z<.97)return;if(!this.canBump)return;this.doBumpCooldown(),this.handleBumping(),T.gameManager.changingSideCrash()}else{if(t.z<.97)return;T.gameManager.endGame(),this.doDieAnim()}},a.onControllerTriggerEnter=function(e){var t=e.collider.node.getComponent(M),n=e.collider.node.getComponent(L);t&&t.collect(),n&&n.enableObjects()},a.doRunAnim=function(){T.gameManager.IsGameEnded||this.doAnimByName("run_long")},a.doJumpAnim=function(){T.gameManager.IsGameEnded||this.doAnimByName("jump")},a.doRollAnim=function(){T.gameManager.IsGameEnded||this.doAnimByName("slide")},a.doFallAnim=function(){},a.doDieAnim=function(){"death1"!=this.currentClipName&&this.doAnimByName("death1")},a.doAnimByName=function(e){this.currentClipName=e,this.skeletalAnim.crossFade(e,.1)},a.doAnimByIndex=function(e){var t=this.skeletalAnim.clips[e];t&&(this.currentClip=e,this.skeletalAnim.defaultClip=t,this.skeletalAnim.crossFade(t.name,.1))},t}(v)).prototype,"forceReviever",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_=t(B.prototype,"inputReader",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),F=t(B.prototype,"characterController",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),x=t(B.prototype,"skeletalAnim",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),P=t(B.prototype,"debugCube",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),G=B))||G));a._RF.pop()}}}));

System.register("chunks:///_virtual/PlayerForceReciever.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Player.ts","./StaticManager.ts","./GameManager.ts"],(function(e){var t,n,i,r,a,o,s,l,c,h,u,d,g,v,y;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,i=e.initializerDefineProperty,r=e.assertThisInitialized,a=e.createClass},function(e){o=e.cclegacy,s=e._decorator,l=e.EventTarget,c=e.BoxCharacterController,h=e.Vec3,u=e.Component,d=e.PhysicsSystem},function(e){g=e.CHA_MOVE_SPEED},function(e){v=e.StaticInstance},function(e){y=e.GameEvents}],execute:function(){var p,f,E,O,R,m;o._RF.push({},"b92fb7VfgxDhbRTtMvbwqee","PlayerForceReciever",void 0);var F=s.ccclass,L=s.property,A=e("PHY_GROUP",function(e){return e[e.DEFAULT=1]="DEFAULT",e[e.COLLECTABLE=2]="COLLECTABLE",e[e.PLAYER=4]="PLAYER",e[e.GROUND=8]="GROUND",e[e.OBSTACLE=16]="OBSTACLE",e}({})),C=(e("ForceEventsTarget",new l),e("ForceEvents",function(e){return e.OnLanded="OnLanded",e.OnGrounded="OnGrounded",e.OnFall="OnFall",e.OnRunSpeedChange="OnRunSpeedChange",e}({})));A.GROUND,e("PlayerForceReviever",(p=F("PlayerForceReviever"),f=L(c),p(((m=function(e){function t(){for(var t,n=arguments.length,a=new Array(n),o=0;o<n;o++)a[o]=arguments[o];return(t=e.call.apply(e,[this].concat(a))||this).EventsTarget=new l,i(t,"characterController",R,r(t)),t.verticalVelocity=0,t.airRoll=!1,t.isInAir=!1,t.isFalling=!1,t}n(t,e);var o=t.prototype;return o.start=function(){this.changeRunSpeed(g)},o.onEnable=function(){v.gameManager.EventsTarget.on(y.OnGameEnd,this.handleOnGameEnd,this)},o.onDisable=function(){v.gameManager.EventsTarget.off(y.OnGameEnd,this.handleOnGameEnd,this)},o.update=function(e){var t=this.isGrounded,n=this.gravity*(this.airRoll?5:1);this.verticalVelocity+=n*e,t?(this.verticalVelocity=Math.max(-2,this.verticalVelocity),this.EventsTarget.emit(C.OnGrounded,this.node.position.y)):(this.isInAir=!0,this.verticalVelocity<0&&!this.isFalling&&(this.isFalling=!0,this.EventsTarget.emit(C.OnFall),console.log("ON FALL"))),t&&this.isInAir&&this.verticalVelocity<0&&(this.isInAir=!1,this.isFalling=!1,this.airRoll=!1,this.EventsTarget.emit(C.OnLanded),console.log("ON LANDED",this.node.position)),this.move(e)},o.changeRunSpeed=function(e){t.runSpeed=e,this.EventsTarget.emit(C.OnRunSpeedChange,e)},o.jump=function(e){this.verticalVelocity=Math.sqrt(-2*e*this.gravity),this.isInAir=!0,this.airRoll=!1,console.log("JUMP: ",this.verticalVelocity)},o.move=function(e){var n=new h(0,this.verticalVelocity*e,-t.runSpeed*e);this.characterController.move(n)},o.handleOnGameEnd=function(){this.changeRunSpeed(0)},a(t,[{key:"gravity",get:function(){return d.instance.gravity.y}},{key:"isGrounded",get:function(){return this.characterController.isGrounded}},{key:"IsInAir",get:function(){return this.isInAir}},{key:"IsFalling",get:function(){return this.isFalling}}],[{key:"RunSpeed",get:function(){return this.runSpeed}}]),t}(u)).runSpeed=g,R=t((O=m).prototype,"characterController",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),E=O))||E));o._RF.pop()}}}));

System.register("chunks:///_virtual/Road.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(o){var t,r,e,n;return{setters:[function(o){t=o.inheritsLoose},function(o){r=o.cclegacy,e=o._decorator,n=o.Component}],execute:function(){var c;r._RF.push({},"ad783vD9RBF6rJOUiV1lxCf","Road",void 0);var i=e.ccclass;e.property,o("Road",i("Road")(c=function(o){function r(){return o.apply(this,arguments)||this}return t(r,o),r}(n))||c);r._RF.pop()}}}));

System.register("chunks:///_virtual/StaticManager.ts",["cc"],(function(t){var n;return{setters:[function(t){n=t.cclegacy}],execute:function(){n._RF.push({},"b1784dy9ghIobkOrAmjg5tY","StaticManager",void 0),t("StaticInstance",function(){function t(){}return t.setGameManager=function(n){t.gameManager=n},t}()).gameManager=void 0,n._RF.pop()}}}));

System.register("chunks:///_virtual/TestCube.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Player.ts"],(function(t){var e,n,o,r,s,i;return{setters:[function(t){e=t.inheritsLoose},function(t){n=t.cclegacy,o=t._decorator,r=t.Vec3,s=t.Component},function(t){i=t.CHA_MOVE_SPEED}],execute:function(){var c;n._RF.push({},"fcdb8c3zhdPj4bzIX+GI4nm","TestCube",void 0);var u=o.ccclass;o.property,t("TestCube",u("TestCube")(c=function(t){function n(){return t.apply(this,arguments)||this}e(n,t);var o=n.prototype;return o.start=function(){},o.update=function(t){this.moveForward(t)},o.moveForward=function(t){var e=this.node.position,n=new r(e.x,e.y,e.z-t*i);this.node.setPosition(n)},n}(s))||c);n._RF.pop()}}}));

System.register("chunks:///_virtual/Utils.ts",["cc"],(function(t){var r;return{setters:[function(t){r=t.cclegacy}],execute:function(){t({delay:function(t){return new Promise((function(r){return setTimeout(r,1e3*t)}))},getRandomItemFromArray:function(t){return t[Math.floor(Math.random()*t.length)]},getRandomNumberFromArray:function(t){return t[Math.floor(Math.random()*t.length)]},getRemainingTimeToDate:function(t){var r=new Date,n=t.getTime()-r.getTime();if(n<=0)return{days:0,hours:0,minutes:0,seconds:0};var e=Math.floor(n/1e3%60),o=Math.floor(n/6e4%60),a=Math.floor(n/36e5%24);return{days:Math.floor(n/864e5),hours:a,minutes:o,seconds:e}},random:function(t,r){return Math.floor(Math.random()*(r-t+1))+t},shuffle:function(t){var r,n,e=t.length;for(;e;)r=Math.floor(Math.random()*e--),n=t[r],t[r]=t[e],t[e]=n;return t},sort:function(t,r,n){void 0===n&&(n=!0);if(t instanceof Array)return t.sort((function(t,e){return t[r]>e[r]?n?1:-1:t[r]<e[r]?n?-1:1:0}))}}),r._RF.push({},"002e5x/F0hAOYGEw9o7dLeL","Utils",void 0),r._RF.pop()}}}));

System.register("chunks:///_virtual/Vec2.math.ts",["cc"],(function(e){var n,t;return{setters:[function(e){n=e.cclegacy,t=e.Vec2}],execute:function(){e({addVec2:function(e,n){return new t(e.x+n.x,e.y+n.y)},divideVec2:function(e,n){return new t(0!==n.x?e.x/n.x:0,0!==n.y?e.y/n.y:0)},lerpVec2:function(e,n,c){return new t(e.x+(n.x-e.x)*c,e.y+(n.y-e.y)*c)},multiplyVec2:function(e,n){return new t(e.x*n.x,e.y*n.y)},subtractVec2:function(e,n){return new t(e.x-n.x,e.y-n.y)}}),n._RF.push({},"bf02adNNIpDQak7ZD8jw8+l","Vec2.math",void 0),n._RF.pop()}}}));

System.register("chunks:///_virtual/Vec3.math.ts",["cc"],(function(e){var n,t;return{setters:[function(e){n=e.cclegacy,t=e.Vec3}],execute:function(){e({addVec3:function(e,n){return new t(e.x+n.x,e.y+n.y,e.z+n.z)},divideVec3:function(e,n){return new t(0!==n.x?e.x/n.x:0,0!==n.y?e.y/n.y:0,0!==n.z?e.z/n.z:0)},lerpVec3:function(e,n,c){return new t(e.x+(n.x-e.x)*c,e.y+(n.y-e.y)*c,e.z+(n.z-e.z)*c)},multiplyVec3:function(e,n){return new t(e.x*n.x,e.y*n.y,e.z*n.z)},subtractVec3:function(e,n){return new t(e.x-n.x,e.y-n.y,e.z-n.z)}}),n._RF.push({},"454ealEFjtJYIZCOd4wLaqQ","Vec3.math",void 0),n._RF.pop()}}}));

(function(r) {
  r('virtual:///prerequisite-imports/main', 'chunks:///_virtual/main'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,